THERE ARE TWO BIG GOALS FOR SHORTCUT AT THIS POINT:
	HAVE A GOOD PITCH FOR WHAT THE HELL IT'S FOR AND WHY YOU'RE PUTTING IN TIME ON IT
		for kris
		for my committee, which needs to be coming soooooon!
		would "robust tools for the non-specialist" be too grandiose?
	START ACTUALLY MAKING PHYLOGENOMIC CUTS WITH IT (REPRODUCE OLD + INVENT NEW)

look at phylogeny.fr and similar tools! they basically do this same thing but as sites
	is there a good reason i'm doing a shell instead?
		just that it was easier for me to implement i guess?
	do these sites do a lot of the same things + programs i've been working on?
	if not, you'll be able to say you have something novel
	and if so, you'll be able to decide whether to stop this project

BEFORE WORKING ANY MORE ON THIS, CHECK THAT IT'S PROBABLY PUBLISHABLE!!
	google for mentions of phylogenomic cuts
	read papers and sketch out how they seemed to do it in each case
	plan how you could adapt shortcut to do the same, or improve on it
	and make a list of examples/things to try and see if they work
	which journals would it maybe fit in?
	if any jump out, what are their publication standards like?

these are probably way to many ideas to actually pursue, so:
	start bouncing them off computationally inclined ppl to see what they think
	start thinking critically (see it starting below!) about your purpose here
	start searching out relevant journals

MAKE REAL SURE YOU'RE NOT JUST MAKING STUFF UP FOR THE HELL OF IT!
	REALLY START RESEARCHING HOW YOU'RE GOING TO PITCH THIS AS A PAPER
		sure you think your idea sounds good, but really learn to make a case for it
		if you can't, it isn't actually good! really take that to heart
	DON'T JUST MAKE A LAYER OVER THE SHELL FOR NO REASON!
	ALSO DON'T REINVENT R OR PYTHON!
		is the sampling idea novel or is there something for it in R land?
			ask some people about R packages + search for them
	MAKE SURE IT HAS STUFF NONE OF THE OTHER LANGUAGES PEOPLE USE HAVE
		otherwise they'll just be like "wtf this was a pointless waste of time"
	what does it add that you can't get from shell scripting?
		simpler, although at the cost of not being able to specify a lot
			would it be easy/possible to add a direct "call shell script" script?
				only do it if you find yourself needing it when doing cuts
		it's typechecked to prevent typos and stuff
			but do people care?
	maybe that should be the pitch:
		it's kind of like shell scripting in that you're running programs
		but it's simpler + safer because:
			everything is typed
			everything is literally shorter and there are fewer options
			built in set operations
		can set up a pipeline before running it
		can develop interactively and always save a reproducible script
	and of course the best pitch is that it can reproduce actual cuts from papers
		then be like: 1) DOES ALL THE STUFF PEOPLE REALLY DO
                              2) simpler, faster, more reproducable
		but the first part is most important
	OK THIS IS THE CLEAREST WAY TO PUT IT:
		IT DOESN'T NEED TO BE A BETTER GENERAL-PURPOSE LANGUAGE; DON'T COMPETE!
		IT JUST NEEDS TO DO PHYLOGENOMIC CUTS 1) NORMALLY AND 2) BETTER
		IT DOESN'T NEED TO DO OTHER STUFF OUTSIDE THE SCOPE OF ONE PAPER!

really do that^. Then next, some great ideas about how the language should be/feel:
	do you really need to have separate single values and sets?
	maybe it should be like R, where things vectorize automatically?
	you only need to track what files can be used with what other files right?
	just implement exactly the ones you need:
		string for literal: filenames and lists
		single numbers (but never any reason for sets of them?)
		fasta files (called sets of genes? or avoid the metaphor?)
		genbank files (convertable to fasta, and maybe the other way around?)
		blast databases, or should those be hidden + made automatically?
		blast result tables
	IS THERE A NEED ANYWHERE IN THERE FOR DISTINGUISHING SETS FROM SINGLE VALUES??
		seems not?
		oh, maybe genomes. they're useful in single + sets
	if not, not need to implement sets this way. can just use singles AS sets sometimes

bugs to fix LATER WHEN THAT'S DONE:
	division hangs indefinitely on non-obvious fractions like 2/7, but not 2/4 or 2/8
		scientific must be spending time calculating them exactly or something?

documentation:
	remember you don't need it until the project gets past being you alone!
	for now, just explain as much as clarifies it for yourself
	need to explain installation
		don't worry about this part yet!
		probably just recommend nix, but also distribute a script that should work on Debian
		if time, make a web server. but only once the paper's written!! don't bother yet
	need a tutorial about the basics
		ideally short, but have to cover the common issues
			iterate on it with other people once the first draft is done
		cover the basics quickly: CLI, types, "make-style" evaluation
	then switch to explaining the PSIIcut as an example:
		basic idea of cuts/subtractive analysis
		blast 7942 against 3 model species and ucyna, then subtract
		adding other cyanos
		methods for telling which genes are good
		methods for telling which genomes are good
		fanciness/actually useful techniques:
			tree stuff
			universal bootstrapping if you ever get it working
				split known genes in half and rediscover
			multigeneblast
			... etc
		this way the tutorial can dovetail with my actual study/paper
	then do a few other example cuts
		ideally people will want to do their projects!
		but bootstrap by reproducing other papers first
	end with a reference
		all the available functions from each module
		couple examples of the use of each module

changes to make to core:
	whatever's needed to make the PSIIcut example work again!!
		that's most important because your project depends on having a real example
		want to get it working before messing with internals in case that breaks something
	docs module? not yet! consider it when you get to an unmanagable number of examples

modules to write:
	download sequences from ncbi
		https://ncbiinsights.ncbi.nlm.nih.gov/2013/02/19/how-to-download-bacterial-genomes-using-the-entrez-api/
		see if that's still current, then rewrite in biopython (or something else better!)
		use rsync for the actual transfers?
		expose intermediate functions that list the records that will be downloaded
		do i want genbank or refseq?
	set permutations and summaries, bootstrapping
		have to think about this some more!
	treecl
		try using it for the PSIIcut first, then package as a module if it's helpful
	multigeneblast
		very nice for finding gene islands
		does it fit with the current paradigm of genes and genomes? no, but if put in terms of fasta and blast it works
	something for phylogenetic trees
		both raxml and fasttree?
		how can i simplify the huge number of options here? need something robust with few choices

random idea for later: graphically opening variables in a viewer program would be cool
	:open and :open_with commands maybe?
