# When training a pssm fails because the e-value is too low/db too distantly
# related, ShortCut creates an "empty" pssm to track that fact rather than
# failing. This tests that it works properly by trying searches that would fail
# otherwise.

# the (7942) query gene has an exact match in its own genome,
# so there should be a hit at any e-value
query   = load_faa "data/7942gene.faa"
pcc7942 = load_faa "data/7942genes.faa"
db7942  = makeblastdb_prot pcc7942

# there's no perfect hit in another cyano though,
# so below a certain cutoff an empty pssm will be created if trained on 6803
pcc6803 = load_faa "data/6803genes.faa"
db6803  = makeblastdb_prot pcc6803

# check that psiblast itself works by training a pssm on each
cutoff   = 0.5
pssm7942 = psiblast_train_db cutoff query db7942
pssm6803 = psiblast_train_db cutoff query db6803

# check that it keeps working on 7942 with increasingly strict cutoffs
# (note: a cutoff of 0 will break this, but give results in a regular search)
cutoffs   = [1, 0.5, 0.1, 1e-2, 1e-3, 1e-5, 1e-10, 1e-20, 1e-50, 1e-100]
pssms7942 = repeat_each pssm7942 cutoff cutoffs

# try overly strict cutoffs with 6803, which would break without empty pssms
# (note: which training command actually throws the error depends on evaluation order)
pssms6803 = repeat_each pssm6803 cutoff cutoffs

# finally, try doing searches on all of them.
# the overly strict ones should have 0 hits rather than throwing an error
hits7942 = psiblast_each_pssm cutoff pssms7942 pcc7942
hits6803 = psiblast_each_pssm cutoff pssms6803 pcc6803

# we only need to evaluate the 6803 ones
# but if they break try the 7942 ones to be sure it's not a general issue
# should be [2, 2, 2, 2, 2, 0, 0, 0, 0, 0]
result = length_each hits6803
