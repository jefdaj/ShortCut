#!/bin/bash

# print a message if log level is set (from within ShortCut or by the user)
# TODO send this to a file rather than stdout?
# log() { [[ -z $SHORTCUT_LOGLEVEL ]] || echo "[$(date '+%Y-%m-%d %H:%M:%S')] $@"; }

# Common options for all srun commands
SRUN="srun --account=co_rosalind --partition=savio2_htc --qos=rosalind_htc2_normal"
SRUN="$SRUN --chdir $(pwd) --quiet"
# TODO CMD="$SRUN --exclusive -N1 -n1"?

# If none of the conditions match, this will run unaltered at the end
# CMD="$@"

# This is specialized to the commands generated by Blast.hs
# It's not going to work for others without adjusting the cut points!
# TODO more robust matching that won't fail if they use the word parallel
# echo "$CMD" | grep recstart 2>&1 > /dev/null;
# if [[ $? == 0 ]]; then
# if [[ "$CMD" == *recstart* ]]; then

srun_single() {
  # This is mostly for debugging but should also be useful for crb-blast
  cmd="$@"
  srun="$SRUN --cpus-per-task=1 --nodes=1-1 --ntasks=1 --time=99:00:00"
  cmd="$srun '$cmd'"
  echo "$cmd"
}

srun_parallel() {
  # monkey-patches a parallel call to run its individual commands via slurm
  cmd="$@"
  before="$(echo "$cmd" | cut -d' ' -f-10)"
  after="$(echo "$cmd" | cut -d' ' -f11-)"
  # before="$(echo "$cmd" | cut -d"\'" -f-9)"
  # after="$(echo "$cmd" | cut -d"\'" -f10-)"
  srun="$SRUN --cpus-per-task=1 --nodes=1-1 --ntasks=1 --time=99:00:00"
  cmd="${before} $srun ${after}"
  echo "$cmd"
}

# if [[ "$CMD" =~ recstart ]]; then
    # TODO does this ever error out? if not, make sure it does first!
    # exit 3
# fi

# Run the finished command
# eval "$CMD"

# OK it's almost certainly a quoting issue!
# Why does only the cat ... part come through in $@?
# I guess we're just running the cat through test.sh and the rest directly?
echo "$@" >> /tmp/test.log

if [[ $@ =~ recstart ]]; then
  cmd="$(srun_parallel "$@")"
  echo "$cmd" >> /tmp/test.log
  eval "$cmd"
else
  eval "$@"
fi
