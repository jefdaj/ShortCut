# OrthoLang default settings
#
# Note that this is not an OrthoLang script! It's just a config file that
# happens to look similar.
#
# Copy it to ~/.ortholang/ortholang.cfg and it will be loaded by default, or
# copy it somewhere else and load it explicitly with the --config flag.
#
# Change whatever settings you want, or remove them to load the built-in
# defaults instead. See below for examples of using the $() syntax to embed
# variables in paths.

# Run from your terminal's current working dir, and save results there...
workdir = "$(PWD)"
outfile = "$(workdir)/result.txt"

# ... but put all other files together in $HOME/.ortholang.
#
# Note that PWD and HOME are environment variables, whereas workdir and tmpdir
# are defined here. You can embed both types of variables the same way.
#
# Also note that folders whose names start with a dot are hidden by default in
# the MacOS Finder app. You can still go to them directly with
# control-command-G, or name tmpdir something else.
#
tmpdir  = "$(HOME)/.ortholang"
report  = "$(tmpdir)/report.html" # TODO should not fail when this is missing!
logfile = "$(tmpdir)/log.txt"
history = "$(tmpdir)/history.txt"

# Whether to enable the :! REPL command for pass-through shell access. It's
# convenient when working on your own computer, but should be disabled if you
# use OrthoLang as part of a public-facing terminal or website. For obvious
# reasons, you also can't change this setting from inside the REPL.
#
# TODO add a setting to disable changing file/folder locations too?
#
shellaccess = true

# Whether to show a dynamic progress bar during long operations. It's nice for
# visual feedback in the terminal but should be disabled when piping
# stderr/stdout to files.
#
progressbar = true

# Whether to show file types (extensions) on variable names. Makes the types
# more obvious, but also adds some clutter/line noise.
#
showvartypes = false

# Auto-save the script after each successful change. If you enable this you
# should probably still "save" by copying the file somewhere more permanent
# periodically, just in case it gets overwritten with a bad version.
#
# Also, be careful not to enable it on scripts you wrote separately if you have
# any comments or whitespace you want preserved.
#
autosave = false

# In the REPL, clear the terminal and :show again after each successful change.
# Makes it easier to keep track of short scripts, but gets awkward once the
# script gets long enough that it can't all be displayed at once.
#
autoshow = false

# You probably don't want this unless you're debugging new functions you wrote!
# Some of the standard functions are implemented using "hidden" macro-expanded
# versions. For example `load_faa_glob "*.faa"` expands into
# `load_faa_path_each (glob_files "*.faa")`. We hide them to avoid confusing
# users with the extra suffixes (like `_path` here).
#
showhidden = false

# Disable debugging and test filters
# TODO should the start off commented out?
debugregex  = ".*"
testpattern = "all"

# Settings for interactive mode
# termcolumns    = 100 # TODO remove this?
# interactive    = true # TODO false?
